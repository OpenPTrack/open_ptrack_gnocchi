#!/usr/bin/env python
PACKAGE = "optar"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("pnp_iterations",						double_t,	0, "Number of iterations for opencv's solvePnPRansac method", 10000, 1, 10000000)
gen.add("pnp_confidence",						double_t,	0, "Confidence for opencv's solvePnPRansac method",   0.999, 0,   0.9999999)
gen.add("pnp_reprojection_error",				double_t,	0, "Reprojection error (=inlier threshold value) used by RANSAC in opencv's solvePnPRansac method",  4, 0, 1000)

gen.add("matching_threshold",					double_t,	0, "Feature matching max threshold used for filtering orb matches",  30, 1, 1000)
gen.add("reprojection_discard_threshold",		double_t,	0, "If a frame gets a reprojection error over this value it will be discarded",  2, 1, 1000)

gen.add("orb_max_points",		int_t,		0, "Max number of keypoints the  algorithm will individuate",  6000, 4, 10000)
gen.add("orb_scale_factor",		double_t,	0, "Scale factor used by the ORB algorithm to search for keypoints at different scales",  1.18, 1.0000001, 4)
gen.add("orb_levels_number",	int_t,		0, "Number of scale levels observed by the ORB algorithm",  12, 1, 50)

gen.add("phone_orientation_diff_thresh",	double_t,		0, "Angle between the fixed camera and the mobile camera beyond which estimation of the mobile camera are discarded",  45, 0, 180)

gen.add("minimum_matches_number",	int_t,		0, "Minimum number of matches needed to accept an estimate",  8, 4, 50)

gen.add("max_pose_height",		double_t,	0, "Maximum pose height allowed for a pose estimate",  2.5, -10, 10)
gen.add("min_pose_height",		double_t,	0, "Minimum pose height allowed for a pose estimate",  0, -10, 10)

gen.add("enable_features_memory",	bool_t,		0, "Enabling this will make the single camera node remember successful features received from the phones, which will be used for the new phone estimations",  False)

gen.add("show_images",	bool_t,		0, "Shows the debug images",  False)


exit(gen.generate(PACKAGE, "optar", "OptarSingleCameraParameters"))
